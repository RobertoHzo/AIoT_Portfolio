
@{
    ViewBag.Title = "Unit1";
}
    <section class="fixed" style="z-index:97;top:0; box-shadow: 0px -2px 4px #0098ff; border-bottom: 1px solid #007bff; "></section>


<section class="page-title1 page-title section pb-0">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="text-center">
                    <h1 class=" text-capitalize mb-0 text-lg text-color1 text_shadows1">Unit 1</h1>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="section blog-post">
    <div class="container">
        <div class="row">
            

            <div class="col-lg-6 col-md-6">
                <div class="post mb-5">
                    <a class="image-content" href="@Url.Action("Act1U1", "Home")">
                        <img src="~/images/a1u1/a1u1-2.png" alt="" class="img-fluid">
                    </a>

                    <div class="post-content">
                        <span class="date text-uppercase text-sm">May 5th 2022</span>
                        <a href="@Url.Action("Act1U1", "Home")"><h4 style=" color: #007bff; ">Practice with analog sensors</h4></a>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6">
                <div class="post mb-5">
                    <a class="image-content" href="@Url.Action("Act2U1", "Home")">
                        <img src="~/images/Act2U1.png" alt="" class="img-fluid">
                    </a>

                    <div class="post-content">
                        <span class="date text-uppercase text-sm">May 2022</span>

                        <a href="@Url.Action("Act2U1", "Home")"><h4 style=" color: #007bff; ">Practice with digital sensors</h4></a>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6">
                <div class="post mb-5">
                    <a class="image-content" href="@Url.Action("Act3U1", "Home")">
                        <img src="~/images/Act3U1.png" alt="" class="img-fluid">
                    </a>

                    <div class="post-content">
                        <span class="date text-uppercase text-sm">May 2022</span>

                        <a href="@Url.Action("Act3U1", "Home")"><h4 style=" color: #007bff; ">Practice with actuators</h4></a>

                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6">
                <div class="post mb-5 mb-lg-0">
                    <a class="image-content" href="@Url.Action("Index", "Tokens")">
                        <img src="~/images/Act3U1.png" alt="" class="img-fluid">
                    </a>

                    <div class="post-content">
                        <span class="date text-uppercase text-sm">May 2022</span>

                        <a href="@Url.Action("Index", "Tokens")"><h4 style=" color: #007bff; ">Storing data in a database with open hardware</h4></a>

                    </div>
                </div>
            </div>


        </div>


    </div>
</section>
<section style=" box-shadow: 0px -2px 4px #0098ff; border-bottom: 1px solid #007bff; "></section>
<script>
    const colors = ["#007bff"];

        const numBalls = 70;
        const balls = [];

        for (let i = 0; i < numBalls; i++) {
            let ball = document.createElement("div");
            ball.classList.add("ball");
            ball.style.background = colors[Math.floor(Math.random() * colors.length)];
            ball.style.left = `${Math.floor(Math.random() * 100)}vw`;
            ball.style.top = `${Math.floor(Math.random() * 100)}vh`;
            ball.style.transform = `scale(${Math.random()})`;
            ball.style.width = `7px`;
            ball.style.height = ball.style.width;


            balls.push(ball);
            document.body.append(ball);
        }

        // Keyframes
        balls.forEach((el, i, ra) => {
            let to = {
                x: Math.random() * (i % 2 === 0 ? -11 : 11),
                y: Math.random() * 12
            };

            let anim = el.animate(
                [
                    { transform: "translate(0, 0)" },
                    { transform: `translate(${to.x}rem, ${to.y}rem)` }
                ],
                {
                    duration: (Math.random() + 1) * 2000, // random duration
                    direction: "alternate",
                    fill: "both",
                    iterations: Infinity,
                    easing: "ease-in-out"
                }
            );
        });
</script>

